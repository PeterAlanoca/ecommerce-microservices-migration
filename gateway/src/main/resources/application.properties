spring.application.name=gateway

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

server.port=8080

# Gateway Configuration
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

# Routes Configuration
# Producto Service Routes (Warehouse)
spring.cloud.gateway.server.webflux.routes[0].id=producto-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://producto
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/ms-producto/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=StripPrefix=1

# Sales Service Routes
spring.cloud.gateway.server.webflux.routes[1].id=sales-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://sales
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/ms-sales/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=StripPrefix=1

# Accounting Service Routes
spring.cloud.gateway.server.webflux.routes[2].id=accounting-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://accounting
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/ms-accounting/**
spring.cloud.gateway.server.webflux.routes[2].filters[0]=StripPrefix=1


# #####

# # Load Balancer Configuration - Explicit Round Robin
# spring.cloud.loadbalancer.ribbon.enabled=false
# spring.cloud.loadbalancer.cache.enabled=false

# # Spring Cloud Gateway Routes Configuration
# spring.cloud.gateway.routes[0].id=serviceA-route
# spring.cloud.gateway.routes[0].uri=lb://serviceA
# spring.cloud.gateway.routes[0].predicates[0]=Path=/serviceA/**
# spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# spring.cloud.gateway.routes[1].id=serviceB-route
# spring.cloud.gateway.routes[1].uri=lb://serviceB
# spring.cloud.gateway.routes[1].predicates[0]=Path=/serviceB/**
# spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# # Enable discovery locator (optional - allows automatic route creation based on service names)
# spring.cloud.gateway.discovery.locator.enabled=true
# spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# # Health check configuration
# management.endpoints.web.exposure.include=health,info
# management.endpoint.health.show-details=always